{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc5e467436": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "vpc7029fd17": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.10.10.0/24",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CloudformwerVPC"
          }
        ]
      }
    },
    "subnet51467439": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "us-west-2b",
        "VpcId": {
          "Ref": "vpc5e467436"
        }
      }
    },
    "subnet50467438": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.32.0/20",
        "AvailabilityZone": "us-west-2a",
        "VpcId": {
          "Ref": "vpc5e467436"
        }
      }
    },
    "subnet319b6d56": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.10.10.0/24",
        "AvailabilityZone": "us-west-2a",
        "VpcId": {
          "Ref": "vpc7029fd17"
        }
      }
    },
    "subnet5f467437": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "us-west-2c",
        "VpcId": {
          "Ref": "vpc5e467436"
        }
      }
    },
    "igw068eef62": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "igw5246743a": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt29467441": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "aclfa16aa9d": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7029fd17"
        }
      }
    },
    "acl5646743e": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc5e467436"
        }
      }
    },
    "rtb6fd34908": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7029fd17"
        }
      }
    },
    "rtb5746743f": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc5e467436"
        }
      }
    },
    "rtb7fd34918": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7029fd17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CloudformerVPCRouteTable"
          }
        ]
      }
    },
    "lctest": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": "ami-0358ce33",
        "InstanceType": "t1.micro",
        "InstanceMonitoring": "true"
      }
    },
    "instancei7d948f65": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-b04e92d0",
        "InstanceType": "t2.micro",
        "KeyName": "yuri-kp-oregon",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet51467439"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.16.4",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdefault"
              }
            ]
          }
        ]
      }
    },
    "instancei51f178c4": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-5ec1673e",
        "InstanceType": "t2.micro",
        "KeyName": "mqtestkp",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mq sdk"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet50467438"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.46.245",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdefault"
              }
            ]
          }
        ]
      }
    },
    "instanceif9d65f6c": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-5ec1673e",
        "InstanceType": "t2.micro",
        "KeyName": "mqtestkp",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mq server"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet50467438"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.37.172",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sgdefault"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "rdstestdbinstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": "0",
        "AllowMajorVersionUpgrade": "false",
        "AutoMinorVersionUpgrade": "true",
        "DBInstanceClass": "db.t2.medium",
        "Port": "3306",
        "PubliclyAccessible": "true",
        "StorageType": "aurora",
        "BackupRetentionPeriod": "0",
        "MasterUsername": "developer",
        "MasterUserPassword": "MyPassword",
        "PreferredBackupWindow": "08:14-08:44",
        "PreferredMaintenanceWindow": "fri:10:37-fri:11:07",
        "DBName": "MyDatabase",
        "Engine": "aurora",
        "EngineVersion": "5.6.10a",
        "LicenseModel": "general-public-license",
        "DBSubnetGroupName": {
          "Ref": "dbsubnetdefault"
        },
        "VPCSecurityGroups": [
          {
            "Ref": "sglaunchwizard1"
          }
        ],
        "Tags": [
          {
            "Key": "workload-type",
            "Value": "other"
          }
        ]
      }
    },
    "tableMyTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "Key",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Key",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "5",
          "WriteCapacityUnits": "5"
        }
      }
    },
    "s3comsteinschreiberlambdadeploys": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "s3comsteinschreibertestlambdadeploys": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        }
      }
    },
    "dbsubnetdefault": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "default",
        "SubnetIds": [
          {
            "Ref": "subnet51467439"
          },
          {
            "Ref": "subnet50467438"
          },
          {
            "Ref": "subnet5f467437"
          }
        ]
      }
    },
    "queueAcoTest": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "345600",
        "ReceiveMessageWaitTimeSeconds": "0",
        "VisibilityTimeout": "30"
      }
    },
    "topicdynamodb": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "dynamodb"
      }
    },
    "sgCloudFormerWebServerSecurityGroup1EZYTF48GHIX2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTPS access via port 443",
        "VpcId": {
          "Ref": "vpc7029fd17"
        }
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpc7029fd17"
        }
      }
    },
    "sglaunchwizard1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-1 created 2016-11-23T19:53:17.745-08:00",
        "VpcId": {
          "Ref": "vpc5e467436"
        }
      }
    },
    "dbsgdefault": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "default"
      }
    },
    "snspolicydynamodb": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "Topics": [
          {
            "Ref": "topicdynamodb"
          }
        ],
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__default_statement_ID",
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
                "SNS:Receive"
              ],
              "Resource": {
                "Ref": "topicdynamodb"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": "473870623194"
                }
              }
            }
          ]
        }
      }
    },
    "alarmMyTableReadCapacityUnitsLimitBasicAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "5",
        "MetricName": "ConsumedReadCapacityUnits",
        "Namespace": "AWS/DynamoDB",
        "Period": "60",
        "Statistic": "Sum",
        "Threshold": "240.0",
        "AlarmActions": [
          "arn:aws:sns:us-west-2:473870623194:dynamodb"
        ],
        "Dimensions": [
          {
            "Name": "TableName",
            "Value": "MyTable"
          }
        ]
      }
    },
    "alarmMyTableWriteCapacityUnitsLimitBasicAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ActionsEnabled": "true",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": "5",
        "MetricName": "ConsumedWriteCapacityUnits",
        "Namespace": "AWS/DynamoDB",
        "Period": "60",
        "Statistic": "Sum",
        "Threshold": "240.0",
        "AlarmActions": [
          "arn:aws:sns:us-west-2:473870623194:dynamodb"
        ],
        "Dimensions": [
          {
            "Name": "TableName",
            "Value": "MyTable"
          }
        ]
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclfa16aa9d"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "aclfa16aa9d"
        }
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl5646743e"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl5646743e"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "aclfa16aa9d"
        },
        "SubnetId": {
          "Ref": "subnet319b6d56"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl5646743e"
        },
        "SubnetId": {
          "Ref": "subnet50467438"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl5646743e"
        },
        "SubnetId": {
          "Ref": "subnet5f467437"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl5646743e"
        },
        "SubnetId": {
          "Ref": "subnet51467439"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7029fd17"
        },
        "InternetGatewayId": {
          "Ref": "igw068eef62"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc5e467436"
        },
        "InternetGatewayId": {
          "Ref": "igw5246743a"
        }
      }
    },
    "subnetroute3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb7fd34918"
        },
        "SubnetId": {
          "Ref": "subnet319b6d56"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb5746743f"
        },
        "GatewayId": {
          "Ref": "igw5246743a"
        }
      },
      "DependsOn": "gw2"
    },
    "route2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb7fd34918"
        },
        "GatewayId": {
          "Ref": "igw068eef62"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc5e467436"
        },
        "DhcpOptionsId": {
          "Ref": "dopt29467441"
        }
      }
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc7029fd17"
        },
        "DhcpOptionsId": {
          "Ref": "dopt29467441"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgCloudFormerWebServerSecurityGroup1EZYTF48GHIX2"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "73.0.0.0/8"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "5000",
        "ToPort": "5000",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "1414",
        "ToPort": "1414",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "473870623194"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress9": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "tcp",
        "FromPort": "3306",
        "ToPort": "3306",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgCloudFormerWebServerSecurityGroup1EZYTF48GHIX2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "auto-generated for everything"
}